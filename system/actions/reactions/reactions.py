import re
import sys
import time

from rich import print
from telethon.tl.functions.messages import SendReactionRequest

from system.actions.subscription.subscription import subscribe_to_group_or_channel
from system.auxiliary_functions.global_variables import console
from system.notification.notification import app_notifications
from system.sqlite_working_tools.sqlite_working_tools import open_the_db_and_read_the_data
from system.sqlite_working_tools.sqlite_working_tools import open_the_db_and_read_the_data_lim
from system.telegram_actions.telegram_actions import connect_to_telegram_account_and_output_name


def users_choice_of_reaction() -> None:
    """–í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤ —á–∞—Ç–µ / –∫–∞–Ω–∞–ª–µ"""
    print("[bold red][!] –î–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º –∫–∞–∫—É—é —Ä–µ–∞–∫—Ü–∏—é –±—É–¥–µ–º —Å—Ç–∞–≤–∏—Ç—å\n",
          "[bold green][0] –ü–æ–¥–Ω—è—Ç—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü üëç\n",
          "[bold green][1] –û–ø—É—â–µ–Ω–Ω—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü üëé\n",
          "[bold green][2] –ö—Ä–∞—Å–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ ‚ù§\n",
          "[bold green][3] –û–≥–æ–Ω—å üî•\n",
          "[bold green][4] –•–ª–æ–ø—É—à–∫–∞ üéâ\n",
          "[bold green][5] –õ–∏—Ü–æ, –∫—Ä–∏—á–∞—â–µ–µ –æ—Ç —Å—Ç—Ä–∞—Ö–∞ üò±\n",
          "[bold green][6] –®–∏—Ä–æ–∫–æ —É–ª—ã–±–∞—é—â–µ–µ—Å—è –ª–∏—Ü–æ üòÅ\n",
          "[bold green][7] –õ–∏—Ü–æ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Ä—Ç–æ–º –∏ –≤ —Ö–æ–ª–æ–¥–Ω–æ–º –ø–æ—Ç—É üò¢\n",
          "[bold green][8] –§–µ–∫–∞–ª–∏–∏ üí©\n",
          "[bold green][9] –ê–ø–ª–æ–¥–∏—Ä—É—é—â–∏–µ —Ä—É–∫–∏ üëè\n")
    user_input = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ")

    if user_input == "0":
        reactions_for_groups_and_messages(reaction_input="üëç")  # –ü–æ–¥–Ω—è—Ç—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü
    elif user_input == "1":
        reactions_for_groups_and_messages(reaction_input="üëé")  # –û–ø—É—â–µ–Ω–Ω—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü
    elif user_input == "2":
        reactions_for_groups_and_messages(reaction_input="‚ù§")  # –ö—Ä–∞—Å–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
    elif user_input == "3":
        reactions_for_groups_and_messages(reaction_input="üî•")  # –û–≥–æ–Ω—å
    elif user_input == "4":
        reactions_for_groups_and_messages(reaction_input="üéâ")  # –•–ª–æ–ø—É—à–∫–∞
    elif user_input == "5":
        reactions_for_groups_and_messages(reaction_input="üò±")  # –õ–∏—Ü–æ, –∫—Ä–∏—á–∞—â–µ–µ –æ—Ç —Å—Ç—Ä–∞—Ö–∞
    elif user_input == "6":
        reactions_for_groups_and_messages(reaction_input="üòÅ")  # –®–∏—Ä–æ–∫–æ —É–ª—ã–±–∞—é—â–µ–µ—Å—è –ª–∏—Ü–æ
    elif user_input == "7":
        reactions_for_groups_and_messages(reaction_input="üò¢")  # –õ–∏—Ü–æ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Ä—Ç–æ–º –∏ –≤ —Ö–æ–ª–æ–¥–Ω–æ–º –ø–æ—Ç—É
    elif user_input == "8":
        reactions_for_groups_and_messages(reaction_input="üí©")  # –§–µ–∫–∞–ª–∏–∏
    elif user_input == "9":
        reactions_for_groups_and_messages(reaction_input="üëè")  # –ê–ø–ª–æ–¥–∏—Ä—É—é—â–∏–µ —Ä—É–∫–∏


def reactions_for_groups_and_messages(reaction_input) -> None:
    """–í–≤–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    chat = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É / –∫–∞–Ω–∞–ª: ")  # –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –∏–ª–∏ –∫–∞–Ω–∞–ª
    message = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–æ—Å—Ç: ")  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –≤ –Ω–æ–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
    message_number = re.sub(f'{chat}/', '', f"{message}")
    records: list = choosing_a_number_of_reactions()  # –í—ã–±–∏—Ä–∞–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    send_reaction_request(records, chat, int(message_number), reaction_input)  # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –ø–æ—Å—Ç, —Å–æ–æ–±—â–µ–Ω–∏–µ


def choosing_a_number_of_reactions() -> list:
    """–í—ã–±–∏—Ä–∞–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    print("[bold red]–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ä–µ–∞–∫—Ü–∏–∏")
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ setting_user/software_database.db
    records: list = open_the_db_and_read_the_data(name_database_table="config")
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ —Ä–∞–±–æ—Ç–µ
    print(f"[bold red]–í—Å–µ–≥–æ accounts: {len(records)}")
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ setting_user/software_database.db
    number_of_accounts = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π: ")
    records: list = open_the_db_and_read_the_data_lim(name_database_table="config",
                                                      number_of_accounts=int(number_of_accounts))
    return records


def send_reaction_request(records, chat, message, reaction_input):
    """–°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    for row in records:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –∏ –≤—ã–≤–æ–¥ –∏–º—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å / —Ç–µ—Ä–º–∏–Ω–∞–ª
        client, phone = connect_to_telegram_account_and_output_name(row)
        try:
            subscribe_to_group_or_channel(client, chat, phone)  # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –≥—Ä—É–ø–ø—É
            client(SendReactionRequest(chat, message, reaction=f'{reaction_input}'))  # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏—é
            time.sleep(1)
        except KeyError:
            sys.exit(1)
        finally:
            client.disconnect()  # –†–∞–∑—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ Telegram
    app_notifications(notification_text=f"–†–∞–±–æ—Ç–∞ —Å –≥—Ä—É–ø–ø–æ–π {chat} –æ–∫–æ–Ω—á–µ–Ω–∞!") # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ


if __name__ == "__main__":
    users_choice_of_reaction()
