# -*- coding: utf-8 -*-
import datetime

import flet as ft
from loguru import logger

from system.account_actions.TGAccountBIO import AccountBIO
from system.account_actions.TGConnect import TGConnect
from system.account_actions.TGContact import TGContact
from system.account_actions.TGCreating import CreatingGroupsAndChats
from system.account_actions.TGInviting import InvitingToAGroup
from system.account_actions.TGInvitingScheduler import launching_an_invite_once_an_hour, \
    launching_invite_every_day_certain_time, schedule_invite
from system.account_actions.TGParsing import ParsingGroupMembers
from system.account_actions.TGReactions import WorkingWithReactions
from system.account_actions.TGSendingMessages import SendTelegramMessages
from system.account_actions.TGSubUnsub import SubscribeUnsubscribeTelegram
from system.auxiliary_functions.auxiliary_functions import find_files, find_folders
from system.auxiliary_functions.global_variables import ConfigReader
from system.setting.setting import SettingPage, get_unique_filename
from system.setting.setting import reaction_gui
from system.sqlite_working_tools.sqlite_working_tools import DatabaseHandler

logger.add("user_settings/log/log.log", rotation="1 MB", compression="zip")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

line_width = 580  # –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞ –∏ —à–∏—Ä–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
program_version, date_of_program_change = "2.1.4", "30.08.2024"  # –í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã, –¥–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è


def telegram_master_main(page: ft.Page):
    page.title = f"TelegramMaster: {program_version} (–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è {date_of_program_change})"
    page.window.width = line_width  # window's —à–∏—Ä–∏–Ω–∞ is 200 px
    page.window.height = 550  # window's –≤—ã—Å–æ—Ç–∞ is 200 px
    page.window.resizable = False  # window is not resizable
    logger.info(f"Program version: {program_version}. Date of change: {date_of_program_change}")

    async def route_change(route):
        page.views.clear()

        # –ú–µ–Ω—é "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

        page.views.append(
            ft.View("/", [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                    bgcolor=ft.colors.SURFACE_VARIANT),
                          ft.Text(spans=[ft.TextSpan(
                              "TelegramMaster 2.0",
                              ft.TextStyle(
                                  size=40,
                                  weight=ft.FontWeight.BOLD,
                                  foreground=ft.Paint(
                                      gradient=ft.PaintLinearGradient((0, 20), (150, 20), [ft.colors.PINK,
                                                                                           ft.colors.PURPLE])), ), ), ], ),
                          ft.Text(disabled=False,
                                  spans=[ft.TextSpan("–ê–∫–∫–∞—É–Ω—Ç  Telegram: "),
                                         ft.TextSpan("https://t.me/PyAdminRU",
                                                     ft.TextStyle(decoration=ft.TextDecoration.UNDERLINE),
                                                     url="https://t.me/PyAdminRU", ), ], ),
                          ft.Text(disabled=False,
                                  spans=[ft.TextSpan("–ö–∞–Ω–∞–ª Telegram: "),
                                         ft.TextSpan("https://t.me/master_tg_d",
                                                     ft.TextStyle(decoration=ft.TextDecoration.UNDERLINE),
                                                     url="https://t.me/master_tg_d", ), ], ),
                          ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                              ft.Row([ft.ElevatedButton(width=270, height=30, text="–ò–Ω–≤–∞–π—Ç–∏–Ω–≥",
                                                        on_click=lambda _: page.go("/inviting")),
                                      ft.ElevatedButton(width=270, height=30, text="–ü–∞—Ä—Å–∏–Ω–≥",
                                                        on_click=lambda _: page.go("/parsing")), ]),
                              ft.Row([ft.ElevatedButton(width=270, height=30, text="–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏",
                                                        on_click=lambda _: page.go("/working_with_contacts")),
                                      ft.ElevatedButton(width=270, height=30, text="–ü–æ–¥–ø–∏—Å–∫–∞, –æ—Ç–ø–∏—Å–∫–∞",
                                                        on_click=lambda _: page.go("/subscribe_unsubscribe")), ]),
                              ft.Row([ft.ElevatedButton(width=270, height=30, text="–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
                                                        on_click=lambda _: page.go("/connecting_accounts")),
                                      ft.ElevatedButton(width=270, height=30, text="–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π",
                                                        on_click=lambda _: page.go("/sending_messages")), ]),
                              ft.Row([ft.ElevatedButton(width=270, height=30, text="–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏",
                                                        on_click=lambda _: page.go("/working_with_reactions")),
                                      ft.ElevatedButton(width=270, height=30, text="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
                                                        on_click=lambda _: page.go("/checking_accounts")), ]),
                              ft.Row([ft.ElevatedButton(width=270, height=30, text="–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)",
                                                        on_click=lambda _: page.go("/creating_groups")),
                                      ft.ElevatedButton(width=270, height=30, text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO",
                                                        on_click=lambda _: page.go("/bio_editing")), ]),
                              ft.ElevatedButton(width=line_width, height=30, text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                                                on_click=lambda _: page.go("/settings")),
                          ]), ]))

        if page.route == "/inviting":  # –ú–µ–Ω—é "–ò–Ω–≤–∞–π—Ç–∏–Ω–≥"
            page.views.append(
                ft.View("/inviting",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–Ω–≤–∞–π—Ç–∏–Ω–≥",
                                               on_click=lambda _: page.go("/inviting_without_limits")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–Ω–≤–∞–π—Ç–∏–Ω–≥ 1 —Ä–∞–∑ –≤ —á–∞—Å",
                                               on_click=lambda _: page.go("/inviting_1_time_per_hour")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è",
                                               on_click=lambda _: page.go("/inviting_certain_time")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å",
                                               on_click=lambda _: page.go("/inviting_every_day")),
                         ])]))
        elif page.route == "/inviting_without_limits":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥
            start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
            logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
            logger.info("‚ñ∂Ô∏è –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –Ω–∞—á–∞–ª—Å—è")
            await InvitingToAGroup().inviting_without_limits(
                account_limits=ConfigReader().get_limits())  # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
            logger.info("üîö –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")
            finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
            logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
            logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
        elif page.route == "/inviting_1_time_per_hour":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ 1 —Ä–∞–∑ –≤ —á–∞—Å
            launching_an_invite_once_an_hour()
        elif page.route == "/inviting_certain_time":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            schedule_invite()
        elif page.route == "/inviting_every_day":  # –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
            launching_invite_every_day_certain_time()
        elif page.route == "/checking_accounts":  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤

            start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
            logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
            logger.info("‚ñ∂Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞—á–∞–ª–∞—Å—å")
            await TGConnect().verify_all_accounts(account_directory="user_settings/accounts",
                                                  extension="session")  # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            folders = find_folders(directory_path="user_settings/accounts")
            for folder in folders:
                logger.info(f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ üìÅ {folder} —á–µ—Ä–µ–∑ —Å–ø–∞–º –±–æ—Ç')
                if folder == "invalid_account":
                    logger.info(f"‚õî –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫—É üìÅ: {folder}")
                    continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª, –ø—Ä–æ–ø—É—Å–∫–∞—è —ç—Ç—É –∏—Ç–µ—Ä–∞—Ü–∏—é
                else:
                    await TGConnect().verify_all_accounts(account_directory=f"user_settings/accounts/{folder}",
                                                          extension="session")
                    await TGConnect().check_for_spam(folder)
            logger.info("üîö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
            logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
            logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è

        elif page.route == "/subscribe_unsubscribe":  # –ú–µ–Ω—é "–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –æ—Ç–ø–∏—Å–∫–∞"
            page.views.append(
                ft.View("/subscribe_unsubscribe",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.ElevatedButton(width=line_width, height=30, text="–ü–æ–¥–ø–∏—Å–∫–∞",
                                               on_click=lambda _: page.go("/subscription_all")),
                             ft.ElevatedButton(width=line_width, height=30, text="–û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è",
                                               on_click=lambda _: page.go("/unsubscribe_all")),
                         ])]))
        elif page.route == "/subscription_all":  # –ü–æ–¥–ø–∏—Å–∫–∞
            await SubscribeUnsubscribeTelegram().subscribe_telegram()
        elif page.route == "/unsubscribe_all":  # –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è
            await SubscribeUnsubscribeTelegram().unsubscribe_all()

        elif page.route == "/working_with_reactions":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏"
            page.views.append(
                ft.View("/working_with_reactions",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.ElevatedButton(width=line_width, height=30, text="–°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏",
                                               on_click=lambda _: page.go("/setting_reactions")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤",
                                               on_click=lambda _: page.go("/we_are_winding_up_post_views")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π",
                                               on_click=lambda _: page.go("/automatic_setting_of_reactions")),
                         ])]))
        elif page.route == "/setting_reactions":  # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏
            await WorkingWithReactions().send_reaction_request()  # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∞–∫—Ü–∏–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –µ—ë –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        elif page.route == "/we_are_winding_up_post_views":  # –ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤
            await WorkingWithReactions().viewing_posts()
        elif page.route == "/automatic_setting_of_reactions":  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π
            await WorkingWithReactions().setting_reactions()  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π

        elif page.route == "/parsing":  # –ú–µ–Ω—é "–ü–∞—Ä—Å–∏–Ω–≥"
            page.views.append(
                ft.View("/parsing",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–ü–∞—Ä—Å–∏–Ω–≥ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã / –≥—Ä—É–ø–ø",
                                               on_click=lambda _: page.go("/parsing_single_groups")),
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–ü–∞—Ä—Å–∏–Ω–≥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã –∏–∑ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                                               on_click=lambda _: page.go("/parsing_selected_group_user_subscribed")),
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–ü–∞—Ä—Å–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã",
                                               on_click=lambda _: page.go("/parsing_active_group_members")),
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–ü–∞—Ä—Å–∏–Ω–≥ –≥—Ä—É–ø–ø / –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∞–Ω –∞–∫–∫–∞—É–Ω—Ç",
                                               on_click=lambda _: page.go(
                                                   "/parsing_groups_channels_account_subscribed")),
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                                               on_click=lambda _: page.go("/clearing_list_previously_saved_data")),
                         ])]))

        elif page.route == "/parsing_single_groups":  # –ü–∞—Ä—Å–∏–Ω–≥ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã / –≥—Ä—É–ø–ø

            start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
            logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
            logger.info("‚ñ∂Ô∏è –ü–∞—Ä—Å–∏–Ω–≥ –Ω–∞—á–∞–ª—Å—è")
            await ParsingGroupMembers().parse_groups()
            logger.info("üîö –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")
            finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
            logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
            logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è


        elif page.route == "/parsing_selected_group_user_subscribed":  # –ü–∞—Ä—Å–∏–Ω–≥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã –∏–∑ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            await ParsingGroupMembers().choose_group_for_parsing()

        elif page.route == "/parsing_active_group_members":  # –ü–∞—Ä—Å–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
            # TODO: –£–±—Ä–∞—Ç—å input() –≤ –∫–æ–¥–µ
            chat_input = input(f"{logger.info('[+] –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ–º —Å–æ–±–∏—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö: ')}")
            limit_active_user = input(f"{logger.info('[+] –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º parsing: ')}")
            await ParsingGroupMembers().parse_active_users(chat_input, int(limit_active_user))

        elif page.route == "/parsing_groups_channels_account_subscribed":  # –ü–∞—Ä—Å–∏–Ω–≥ –≥—Ä—É–ø–ø / –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∞–Ω –∞–∫–∫–∞—É–Ω—Ç
            await ParsingGroupMembers().parse_subscribed_groups()
        elif page.route == "/clearing_list_previously_saved_data":  # –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            await DatabaseHandler().cleaning_db(name_database_table="members")

        elif page.route == "/working_with_contacts":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"
            page.views.append(
                ft.View("/working_with_contacts",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.ElevatedButton(width=line_width, height=30, text="–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
                                               on_click=lambda _: page.go("/creating_contact_list")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
                                               on_click=lambda _: page.go("/show_list_contacts")),
                             ft.ElevatedButton(width=line_width, height=30, text="–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
                                               on_click=lambda _: page.go("/deleting_contacts")),
                             ft.ElevatedButton(width=line_width, height=30, text="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
                                               on_click=lambda _: page.go("/adding_contacts")),
                         ])]))
        elif page.route == "/creating_contact_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            await DatabaseHandler().open_and_read_data("contact")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
            SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤", "contact",
                                                 "contact", "/working_with_contacts", "contact")
        elif page.route == "/show_list_contacts":  # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            await TGContact().show_account_contact_list()
        elif page.route == "/deleting_contacts":  # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            await TGContact().delete_contact()
        elif page.route == "/adding_contacts":  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            await TGContact().inviting_contact()
        elif page.route == "/connecting_accounts":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –º–µ—Ç–æ–¥–æ–º –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            await TGConnect().start_telegram_session(page)
        elif page.route == "/creating_groups":  # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)
            await CreatingGroupsAndChats().creating_groups_and_chats()
        elif page.route == "/sending_messages":  # –ú–µ–Ω—é "–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"
            page.views.append(
                ft.View("/sending_messages",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.ElevatedButton(width=line_width, height=30, text="–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É",
                                               on_click=lambda _: page.go("/sending_messages_personal_account")),
                             ft.ElevatedButton(width=line_width, height=30, text="–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ª–∏—á–∫—É",
                                               on_click=lambda _: page.go("/sending_files_personal_account")),
                             ft.ElevatedButton(width=line_width, height=30, text="–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º",
                                               on_click=lambda _: page.go("/sending_messages_via_chats")),
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º —Å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–æ–º",
                                               on_click=lambda _: page.go(
                                                   "/sending_messages_via_chats_with_answering_machine")),
                             ft.ElevatedButton(width=line_width, height=30, text="–†–∞—Å—Å—ã–ª–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º",
                                               on_click=lambda _: page.go("/sending_files_via_chats")),
                             ft.ElevatedButton(width=line_width, height=30, text="–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π + —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º",
                                               on_click=lambda _: page.go("/sending_messages_files_via_chats")),
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É (—Å –ª–∏–º–∏—Ç–∞–º–∏)",
                                               on_click=lambda _: page.go("/sending_personal_messages_with_limits")),
                             ft.ElevatedButton(width=line_width, height=30, text="–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ª–∏—á–∫—É (—Å –ª–∏–º–∏—Ç–∞–º–∏)",
                                               on_click=lambda _: page.go(
                                                   "/sending_files_to_personal_account_with_limits")),
                         ])]))
        elif page.route == "/sending_messages_personal_account":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É
            logger.info(f"–õ–∏–º–∏—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)")
            await SendTelegramMessages().send_message_from_all_accounts(account_limits=None)
        elif page.route == "/sending_files_personal_account":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ª–∏—á–∫—É
            logger.info(f"–õ–∏–º–∏—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)")
            await SendTelegramMessages().send_files_to_personal_chats(account_limits=None)
        elif page.route == "/sending_messages_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º
            entities = find_files(directory_path="user_settings/message", extension="json")
            logger.info(entities)
            await SendTelegramMessages().sending_messages_via_chats_times()
        elif page.route == "/sending_messages_via_chats_with_answering_machine":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º —Å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–æ–º
            await SendTelegramMessages().answering_machine()
        elif page.route == "/sending_files_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º
            await SendTelegramMessages().sending_files_via_chats()
        elif page.route == "/sending_messages_files_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π + —Ñ–∞–π–ª–æ–≤ –ø–æ —á–∞—Ç–∞–º
            await SendTelegramMessages().sending_messages_files_via_chats()
        elif page.route == "/sending_personal_messages_with_limits":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É (—Å –ª–∏–º–∏—Ç–∞–º–∏)
            account_limits = ConfigReader().get_limits()
            await SendTelegramMessages().send_message_from_all_accounts(account_limits=account_limits)
        elif page.route == "/sending_files_to_personal_account_with_limits":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ª–∏—á–∫—É (—Å –ª–∏–º–∏—Ç–∞–º–∏)
            account_limits = ConfigReader().get_limits()
            await SendTelegramMessages().send_files_to_personal_chats(account_limits=account_limits)

        elif page.route == "/bio_editing":  # –ú–µ–Ω—é "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO"
            page.views.append(
                ft.View("/bio_editing",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ username",
                                               on_click=lambda _: page.go("/changing_username")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ",
                                               on_click=lambda _: page.go("/edit_photo")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è",
                                               on_click=lambda _: page.go("/edit_description")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏",
                                               on_click=lambda _: page.go("/name_change")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏",
                                               on_click=lambda _: page.go("/change_surname")),
                         ])]))

        elif page.route == "/edit_description":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            await AccountBIO().change_bio_profile_gui(page)
        elif page.route == "/name_change":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
            await AccountBIO().change_name_profile_gui(page)
        elif page.route == "/change_surname":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
            await AccountBIO().change_last_name_profile_gui(page)
        elif page.route == "/edit_photo":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ
            await AccountBIO().change_photo_profile()
        elif page.route == "/changing_username":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ username
            await AccountBIO().change_username_profile_gui(page)

        elif page.route == "/settings":  # –ú–µ–Ω—é "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ TelegramMaster"
            page.views.append(
                ft.View("/settings",
                        [ft.AppBar(title=ft.Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                                   bgcolor=ft.colors.SURFACE_VARIANT),
                         ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                             ft.Row([ft.ElevatedButton(width=270, height=30, text="–í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π",
                                                       on_click=lambda _: page.go("/choice_of_reactions")),
                                     ft.ElevatedButton(width=270, height=30, text="–ó–∞–ø–∏—Å—å proxy",
                                                       on_click=lambda _: page.go("/proxy_entry"))]),
                             ft.Row([ft.ElevatedButton(width=270, height=30, text="–°–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
                                                       on_click=lambda _: page.go("/changing_accounts")),
                                     ft.ElevatedButton(width=270, height=30, text="–ó–∞–ø–∏—Å—å api_id, api_hash",
                                                       on_click=lambda _: page.go("/recording_api_id_api_hash"))]),
                             ft.Row([ft.ElevatedButton(width=270, height=30, text="–ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏",
                                                       on_click=lambda _: page.go("/time_between_subscriptions")),
                                     ft.ElevatedButton(width=270, height=30, text="–ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π",
                                                       on_click=lambda _: page.go("/message_recording"))]),
                             ft.Row([ft.ElevatedButton(width=270, height=30, text="–ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞",
                                                       on_click=lambda _: page.go("/link_entry")),
                                     ft.ElevatedButton(width=270, height=30, text="–õ–∏–º–∏—Ç—ã –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç",
                                                       on_click=lambda _: page.go("/account_limits"))]),
                             ft.Row([ft.ElevatedButton(width=270, height=30, text="–õ–∏–º–∏—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è",
                                                       on_click=lambda _: page.go("/message_limits")),
                                     ft.ElevatedButton(width=270, height=30, text="–í—Ä–µ–º—è –º–µ–∂–¥—É –ø–æ–¥–ø–∏—Å–∫–æ–π",
                                                       on_click=lambda _: page.go("/time_between_subscriptionss")), ]),
                             ft.ElevatedButton(width=line_width, height=30, text="–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ username",
                                               on_click=lambda _: page.go("/creating_username_list")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏",
                                               on_click=lambda _: page.go("/recording_the_time_between_messages")),
                             ft.ElevatedButton(width=line_width, height=30,
                                               text="–í—Ä–µ–º—è –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–æ–º, —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π",
                                               on_click=lambda _: page.go("/time_between_invites_sending_messages")),
                             ft.ElevatedButton(width=line_width, height=30, text="–ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π",
                                               on_click=lambda _: page.go("/recording_reaction_link")),
                             ft.ElevatedButton(width=line_width, height=30, text="–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ / –∫–∞–Ω–∞–ª–æ–≤",
                                               on_click=lambda _: page.go("/forming_list_of_chats_channels")),
                         ])]))

        elif page.route == "/recording_api_id_api_hash":  # –ó–∞–ø–∏—Å—å api_id, api_hash
            SettingPage().writing_api_id_api_hash(page)
        elif page.route == "/message_limits":  # –õ–∏–º–∏—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            SettingPage().record_setting(page, "message_limits", "–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è")
        elif page.route == "/account_limits":  # –õ–∏–º–∏—Ç—ã –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
            SettingPage().record_setting(page, "account_limits", "–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
        elif page.route == "/creating_username_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ username
            SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ username", "members",
                                                 "username, id, access_hash, first_name, last_name, user_phone, online_at, photos_id, user_premium",
                                                 "/settings", "members (username)")
        elif page.route == "/forming_list_of_chats_channels":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ / –∫–∞–Ω–∞–ª–æ–≤
            await DatabaseHandler().open_and_read_data("writing_group_links")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
            SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≥—Ä—É–ø–ø—ã", "writing_group_links",
                                                 "writing_group_links", "/settings", "writing_group_links")
        elif page.route == "/link_entry":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
            await DatabaseHandler().cleaning_db("links_inviting")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –≥—Ä—É–ø–ø–∞–º–∏
            SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞", "links_inviting",
                                                 "links_inviting", "/settings", "links_inviting")
        elif page.route == "/proxy_entry":  # –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            SettingPage().creating_the_main_window_for_proxy_data_entry(page)
        elif page.route == "/message_recording":  # –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π
            SettingPage().recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É",
                                                              get_unique_filename(
                                                                  base_filename='user_settings/message/message'))
        elif page.route == "/recording_reaction_link":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            SettingPage().recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è",
                                                              'user_settings/reactions/link_channel.json')
        elif page.route == "/choice_of_reactions":  # –í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π
            reaction_gui(page)
        elif page.route == "/recording_the_time_between_messages":  # –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            SettingPage().create_main_window(page, variable="time_sending_messages")
        elif page.route == "/time_between_invites_sending_messages":  # –í—Ä–µ–º—è –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–æ–º, —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            SettingPage().create_main_window(page, variable="time_inviting")
        elif page.route == "/changing_accounts":  # –°–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            SettingPage().create_main_window(page, variable="time_changing_accounts")
        elif page.route == "/time_between_subscriptions":  # –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏
            SettingPage().recording_the_time_to_launch_an_invite_every_day(page)
        elif page.route == "/time_between_subscriptionss":  # –í—Ä–µ–º—è –º–µ–∂–¥—É –ø–æ–¥–ø–∏—Å–∫–æ–π
            SettingPage().create_main_window(page, variable="time_subscription")
        page.update()

    def view_pop(view):
        page.views.pop()
        top_view = page.views[-1]
        page.go(top_view.route)

    page.on_route_change = route_change
    page.on_view_pop = view_pop
    page.go(page.route)


ft.app(target=telegram_master_main)

