# -*- coding: utf-8 -*-
import flet as ft
from loguru import logger

from src.core.checking_program import CheckingProgram
from src.core.configs import (PROGRAM_NAME, PROGRAM_VERSION, DATE_OF_PROGRAM_CHANGE, WINDOW_WIDTH,
                              WINDOW_HEIGHT, WINDOW_RESIZABLE, TIME_SENDING_MESSAGES_1, time_sending_messages_2)
from src.core.sqlite_working_tools import create_database, open_and_read_data
from src.features.account.account_bio import AccountBIO
from src.features.account.chek import TGChek
from src.features.account.connect import TGConnect
from src.features.account.contact import TGContact
from src.features.account.creating import CreatingGroupsAndChats
from src.features.account.reactions import WorkingWithReactions
from src.features.account.sending_messages import SendTelegramMessages
from src.features.account.viewing_posts import ViewingPosts
from src.features.account.inviting import InvitingToAGroup
from src.features.account.parsing.parsing import ParsingGroupMembers
from src.features.account.subscribe_unsubscribe.subscribe_unsubscribe import SubscribeUnsubscribeTelegram
from src.features.auth.logging_in import SendLog
from src.features.recording.receiving_and_recording import ReceivingAndRecording
from src.features.settings.setting import SettingPage
from src.gui.gui import AppLogger
from src.gui.menu import Menu
from src.gui.notification import show_notification

logger.add("user_data/log/log_ERROR.log", rotation="500 KB", compression="zip", level="ERROR")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã


async def main(page: ft.Page):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    await SendLog(page=page).loging()

    create_database()  # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    page.title = f"{PROGRAM_NAME}: {PROGRAM_VERSION} (–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è {DATE_OF_PROGRAM_CHANGE})"
    page.window.width = WINDOW_WIDTH  # –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞
    page.window.height = WINDOW_HEIGHT  # –í—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞
    page.window.resizable = WINDOW_RESIZABLE  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    app_logger = AppLogger(page=page)
    setting_page = SettingPage(page=page)
    account_bio = AccountBIO(page=page)
    menu = Menu(page=page)

    async def route_change(_):
        page.views.clear()
        # ______________________________________________________________________________________________________________
        await menu.main_menu_program()  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã
        # ______________________________________________________________________________________________________________
        if page.route == "/inviting":  # –ú–µ–Ω—é "üöÄ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥"
            # TODO –º–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ Peewee. –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤, username, —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥
            await InvitingToAGroup(page=page).inviting_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/account_verification_menu":  # "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"
            await TGChek(page=page).account_verification_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/subscribe_unsubscribe":  # –ú–µ–Ω—é "–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –æ—Ç–ø–∏—Å–∫–∞"
            await SubscribeUnsubscribeTelegram(page=page).subscribe_and_unsubscribe_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/working_with_reactions":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏"
            await menu.reactions_menu()
        elif page.route == "/setting_reactions":  # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏
            start = await app_logger.start_time()
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await WorkingWithReactions(page=page).send_reaction_request(page=page)
            logger.info("üîö –ö–æ–Ω–µ—Ü –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await app_logger.end_time(start)
        elif page.route == "/automatic_setting_of_reactions":  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π
            start = await app_logger.start_time()
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await WorkingWithReactions(page=page).setting_reactions()
            logger.info("üîö –ö–æ–Ω–µ—Ü –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await app_logger.end_time(start)
        # __________________________________________________________________________________________________________
        elif page.route == "/viewing_posts_menu":  # Ô∏è‚Äçüó®Ô∏è –ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤
            await ViewingPosts(page=page).viewing_posts_request()
        # __________________________________________________________________________________________________________
        elif page.route == "/parsing":  # –ú–µ–Ω—é "–ü–∞—Ä—Å–∏–Ω–≥"
            await ParsingGroupMembers(page=page).account_selection_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/importing_a_list_of_parsed_data":  # üìã –ò–º–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            await ReceivingAndRecording().write_data_to_excel(file_name="user_data/parsed_chat_participants.xlsx")
        # __________________________________________________________________________________________________________
        elif page.route == "/working_with_contacts":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"
            await menu.working_with_contacts_menu()
        elif page.route == "/creating_contact_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await app_logger.start_time()
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            open_and_read_data(table_name="contact")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
            # TODO –º–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ PEEWEE
            await setting_page.output_the_input_field(page=page, table_name="contact",
                                                      column_name="contact", route="/working_with_contacts",
                                                      into_columns="contact")
            logger.info("üîö –ö–æ–Ω–µ—Ü –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await app_logger.end_time(start)
        elif page.route == "/show_list_contacts":  # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await app_logger.start_time()
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await TGContact(page=page).show_account_contact_list()
            logger.info("üîö –ö–æ–Ω–µ—Ü –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await app_logger.end_time(start)
        elif page.route == "/deleting_contacts":  # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await app_logger.start_time()
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await TGContact(page=page).delete_contact()
            logger.info("üîö –ö–æ–Ω–µ—Ü –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await app_logger.end_time(start)
        elif page.route == "/adding_contacts":  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await app_logger.start_time()
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await TGContact(page=page).inviting_contact()
            logger.info("üîö –ö–æ–Ω–µ—Ü –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await app_logger.end_time(start)
        # __________________________________________________________________________________________________________
        elif page.route == "/account_connection_menu":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ '–º–µ–Ω—é'.
            await TGConnect(page=page).account_connection_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/creating_groups":  # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)
            await CreatingGroupsAndChats(page=page).creating_groups_and_chats()
        # __________________________________________________________________________________________________________
        elif page.route == "/sending_messages_files_via_chats":  # üí¨ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º
            await CheckingProgram(page=page).check_before_sending_messages_via_chats()
            await SendTelegramMessages(page=page).sending_messages_files_via_chats()

        elif page.route == "/sending_files_to_personal_account_with_limits":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É
            await SendTelegramMessages(page=page).send_files_to_personal_chats()
        # __________________________________________________________________________________________________________
        elif page.route == "/bio_editing":  # –ú–µ–Ω—é "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO"
            await menu.bio_editing_menu()
        elif page.route == "/edit_description":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            await account_bio.change_bio_profile_gui()
        elif page.route == "/name_change":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram
            await account_bio.change_name_profile_gui()
        elif page.route == "/change_surname":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
            await account_bio.change_last_name_profile_gui()
        elif page.route == "/edit_photo":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ
            await account_bio.change_photo_profile_gui()
            await show_notification(page=page, message="üîö –§–æ—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        elif page.route == "/changing_username":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ username
            await account_bio.change_username_profile_gui()
        # __________________________________________________________________________________________________________
        elif page.route == "/settings":  # –ú–µ–Ω—é "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ TelegramMaster"
            await menu.settings_menu()
        elif page.route == "/choice_of_reactions":  # üëç –í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π
            await setting_page.reaction_gui()
        elif page.route == "/proxy_entry":  # üîê –ó–∞–ø–∏—Å—å proxy
            await setting_page.creating_the_main_window_for_proxy_data_entry()
        elif page.route == "/recording_api_id_api_hash":  # üìù –ó–∞–ø–∏—Å—å api_id, api_hash
            await setting_page.writing_api_id_api_hash()
        elif page.route == "/message_recording":  # ‚úâÔ∏è –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π
            await setting_page.recording_text_for_sending_messages("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è",
                                                                   setting_page.get_unique_filename(
                                                                       base_filename='user_data/message/message'))
        elif page.route == "/recording_reaction_link":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            await setting_page.recording_text_for_sending_messages("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π",
                                                                   'user_data/reactions/link_channel.json')
        elif page.route == "/recording_the_time_between_messages":  # –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            await setting_page.create_main_window(variable="time_sending_messages",
                                                  smaller_timex=TIME_SENDING_MESSAGES_1,
                                                  larger_timex=time_sending_messages_2)
        page.update()

    def view_pop(_):
        page.views.pop()
        top_view = page.views[-1]
        page.go(top_view.route)

    page.on_route_change = route_change
    page.on_view_pop = view_pop
    page.go(page.route)


if __name__ == '__main__':
    ft.app(target=main)
