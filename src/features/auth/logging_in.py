# -*- coding: utf-8 -*-
import json
from urllib.request import urlopen  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å urllib2 –Ω–∞ urllib.request

import flet as ft  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É flet
import requests

from src.gui.gui import AppLogger


class IPInfoService:

    def __init__(self, page: ft.Page):
        self.page = page
        self.app_logger = AppLogger(page)

    def get_country_flag(self, ip_address):
        """
        –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ ip –∞–¥—Ä–µ—Å—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ—Ä–≤–∏—Å–∞ https://ipwhois.io/ru/documentation.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–ª–∞–≥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã.
        :param ip_address: IP –∞–¥—Ä–µ—Å
        :return: —Ñ–ª–∞–≥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
        """
        try:
            ipwhois = json.load(urlopen(f'https://ipwho.is/{ip_address}'))
            return ipwhois['flag']['emoji'], ipwhois['country']
        except KeyError:
            return "üè≥Ô∏è", "üåç"

    def get_external_ip(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ ip –∞–¥—Ä–µ—Å–∞"""
        try:
            response = requests.get('https://httpbin.org/ip')
            response.raise_for_status()
            return response.json().get("origin")
        except requests.RequestException as _:
            return None
