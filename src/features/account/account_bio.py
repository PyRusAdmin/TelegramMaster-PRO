# -*- coding: utf-8 -*-
import flet as ft  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É flet
from loguru import logger  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É loguru
from telethon import functions  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É telethon
from telethon.errors import (AuthKeyUnregisteredError, UsernameInvalidError, UsernameOccupiedError,
                             UsernamePurchaseAvailableError)

from src.core.configs import WIDTH_WIDE_BUTTON, BUTTON_HEIGHT, path_accounts_folder
from src.core.utils import Utils
from src.features.account.connect import TGConnect
from src.features.account.parsing.gui_elements import GUIProgram
from src.gui.gui import AppLogger
from src.gui.notification import show_notification
from src.locales.translations_loader import translations


class AccountBIO:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram —á–µ—Ä–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Flet.
    """

    def __init__(self, page: ft.Page):
        self.page = page
        self.connect = TGConnect(page=page)
        self.app_logger = AppLogger(page=page)
        self.utils = Utils(page=page)

    async def change_bio_profile(self, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è Telegram –∞–∫–∫–∞—É–Ω—Ç–∞.

        :param user_input - –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è Telegram
        :return: None
        """
        try:
            await self.app_logger.log_and_display(f"–ó–∞–ø—É—Å–∫ —Å–º–µ–Ω—ã  –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")
            for session_name in self.utils.find_filess(directory_path=path_accounts_folder, extension='session'):
                await self.app_logger.log_and_display(f"{session_name}")

                client = await self.connect.client_connect_string_session(session_name=session_name)

                await client.connect()
                if len(user_input) > 70:
                    await show_notification(self.page, f"‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 70 —Å–∏–º–≤–æ–ª–æ–≤ ({len(user_input)}).")
                    return
                try:
                    result = await client(functions.account.UpdateProfileRequest(about=user_input))
                    await self.app_logger.log_and_display(f"{result}\n–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                except AuthKeyUnregisteredError:
                    await self.app_logger.log_and_display(translations["ru"]["errors"]["auth_key_unregistered"])
                finally:
                    await client.disconnect()

        except Exception as error:
            logger.exception(error)

        await show_notification(self.page, "–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        self.page.go("/bio_editing")  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è üè†

    async def change_name_profile(self, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è

        :param user_input - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            for session_name in self.utils.find_filess(directory_path=path_accounts_folder, extension='session'):
                await self.app_logger.log_and_display(f"{session_name}")
                client = await self.connect.client_connect_string_session(session_name=session_name)
                await client.connect()
                try:
                    result = await client(functions.account.UpdateProfileRequest(first_name=user_input))
                    await self.app_logger.log_and_display(f"{result}\n–ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
                except AuthKeyUnregisteredError:
                    await self.app_logger.log_and_display(translations["ru"]["errors"]["auth_key_unregistered"])
                finally:
                    await client.disconnect()
                await show_notification(self.page, "–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                self.page.go("/bio_editing")  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è üè†
        except Exception as error:
            logger.exception(error)

    async def bio_editing_menu(self):
        """
        –ú–µ–Ω—é ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO
        """

        profile_description_input_field = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 70 —Å–∏–º–≤–æ–ª–æ–≤: ",
                                                       multiline=True,
                                                       max_lines=19)

        async def btn_click(_) -> None:
            """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è Telegram."""
            await self.change_bio_profile(user_input=profile_description_input_field.value)
            self.page.go("/bio_editing")  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
            self.page.update()

        profile_name_input_field = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 64 —Å–∏–º–≤–æ–ª–æ–≤: ",
                                                multiline=True,
                                                max_lines=19)

        async def change_name_profile_gui(_) -> None:
            """
            –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet
            """
            await self.change_name_profile(user_input=profile_name_input_field)
            self.page.go("/bio_editing")  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
            self.page.update()

        self.page.views.append(
            ft.View("/bio_editing",
                    [await GUIProgram().key_app_bar(),
                     ft.Text(spans=[ft.TextSpan(
                         translations["ru"]["menu"]["edit_bio"],
                         ft.TextStyle(
                             size=20, weight=ft.FontWeight.BOLD,
                             foreground=ft.Paint(
                                 gradient=ft.PaintLinearGradient((0, 20), (150, 20), [ft.Colors.PINK,
                                                                                      ft.Colors.PURPLE])), ), ), ], ),
                     ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                         # üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ username
                         ft.ElevatedButton(width=WIDTH_WIDE_BUTTON, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["edit_bio_menu"]["changing_the_username"],
                                           on_click=lambda _: self.page.go("/changing_username")),
                         # üñºÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ
                         ft.ElevatedButton(width=WIDTH_WIDE_BUTTON, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["edit_bio_menu"]["changing_the_photo"],
                                           on_click=lambda _: self.page.go("/edit_photo")),

                         profile_description_input_field,  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è Telegram

                         # ‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
                         ft.ElevatedButton(width=WIDTH_WIDE_BUTTON, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["edit_bio_menu"]["changing_the_description"],
                                           on_click=btn_click),

                         profile_name_input_field,  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram

                         # üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
                         ft.ElevatedButton(width=WIDTH_WIDE_BUTTON, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["edit_bio_menu"]["name_change_n"],
                                           on_click=change_name_profile_gui),

                         # üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
                         ft.ElevatedButton(width=WIDTH_WIDE_BUTTON, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["edit_bio_menu"]["name_change_f"],
                                           on_click=lambda _: self.page.go("/change_surname")),
                     ])]))

    async def change_photo_profile_gui(self) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Flet.
        """
        await self.change_photo_profile()

    async def change_username_profile_gui(self) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet
        """
        await self.create_profile_gui(self.change_username_profile,
                                      label="–í–≤–µ–¥–∏—Ç–µ username –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ –±–æ–ª–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤):")

    async def change_last_name_profile_gui(self) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet
        """
        await self.create_profile_gui(self.change_last_name_profile,
                                      label="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 64 —Å–∏–º–≤–æ–ª–æ–≤: ")

    # class AccountActions:
    #     """
    #     –ö–ª–∞—Å—Å, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –∞–∫–∫–∞—É–Ω—Ç–æ–º Telegram.
    #     """
    #
    #     def __init__(self, directory_path, extension, tg_connect, page: ft.Page):
    #         self.page = page  # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet
    #         self.directory_path = directory_path  # –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ Telegram
    #         self.extension = extension  # —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º Telegram (session)
    #         self.connect = tg_connect  # –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ TelegramConnect (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –∞–∫–∫–∞—É–Ω—Ç—É)
    #         self.app_logger = AppLogger(page=page)
    #         self.utils = Utils(page=page)

    async def change_username_profile(self, user_input) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ username –ø—Ä–æ—Ñ–∏–ª—è Telegram

        :param user_input  - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            for session_name in self.utils.find_filess(directory_path=path_accounts_folder, extension='session'):
                await self.app_logger.log_and_display(f"{session_name}")
                client = await self.connect.client_connect_string_session(session_name=session_name)
                await client.connect()
                try:
                    await client(functions.account.UpdateUsernameRequest(username=user_input))
                    await show_notification(self.page, f'–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞')  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                except AuthKeyUnregisteredError:
                    await self.app_logger.log_and_display(translations["ru"]["errors"]["auth_key_unregistered"])
                except (UsernamePurchaseAvailableError, UsernameOccupiedError):
                    await show_notification(self.page, "‚ùå –ù–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                except UsernameInvalidError:
                    await show_notification(self.page, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                finally:
                    await client.disconnect()
        except Exception as error:
            logger.exception(error)

    async def change_last_name_profile(self, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è

        :param user_input - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        """
        try:
            for session_name in self.utils.find_filess(directory_path=path_accounts_folder, extension='session'):
                await self.app_logger.log_and_display(f"{session_name}")
                client = await self.connect.client_connect_string_session(session_name=session_name)
                await client.connect()
                try:
                    result = await client(functions.account.UpdateProfileRequest(last_name=user_input))
                    await self.app_logger.log_and_display(f"{result}\n–§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                except AuthKeyUnregisteredError:
                    await self.app_logger.log_and_display(translations["ru"]["errors"]["auth_key_unregistered"])
                finally:
                    await client.disconnect()
                await show_notification(self.page, "–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        except Exception as error:
            logger.exception(error)

    async def change_photo_profile(self):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è.
        """
        try:
            for session_name in self.utils.find_filess(directory_path=path_accounts_folder, extension='session'):
                await self.app_logger.log_and_display(message=f"{session_name}")
                client = await self.connect.client_connect_string_session(session_name=session_name)
                for photo_file in await self.utils.find_files(directory_path="user_data/bio", extension='jpg'):
                    try:
                        await client.connect()
                        await client(functions.photos.UploadProfilePhotoRequest(
                            file=await client.upload_file(f"user_data/bio/{photo_file[0]}.jpg")))
                    except AuthKeyUnregisteredError:
                        await self.app_logger.log_and_display(translations["ru"]["errors"]["auth_key_unregistered"])
                    finally:
                        await client.disconnect()
        except Exception as error:
            logger.exception(error)

        await show_notification(page=self.page, message="–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        self.page.go("/bio_editing")  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è üè†
